apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        //开启MultiDex分包方法
        multiDexEnabled true

        kapt {
            arguments {
                // 阿里路由的包参数
                arg("AROUTER_MODULE_NAME", project.getName())
            }
        }

        // 资源前置限定，只报红，编译可以通过
        resourcePrefix "${project.name}_"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        viewBinding = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        // 解决ktx的编译问题，默认使用的是1.6
        jvmTarget = "1.8"
    }
    dependencies {
        implementation fileTree(dir: 'libs', include: ['*.jar'])

        //把implementation 用api代替,它是对外部公开的, 所有其他的module就不需要添加该依赖

        // Android必须的库
        api rootProject.ext.dependencies.appcompat

        // kotlin相关
        api rootProject.ext.dependencies.kotlin_stdlib_jdk // 基础
//    api 'org.jetbrains.kotlinx:kotlin-reflect.jar' // kt反射包
        api 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.0' // android Main等
        api rootProject.ext.dependencies.kotlinx_coroutines_core // 携程

        // ktx
        api rootProject.ext.dependencies.core_ktx // Android简便扩展库
        api "androidx.fragment:fragment-ktx:1.3.5"
        api "androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.0"

        def livedataVersion = "2.4.0"
        api "androidx.lifecycle:lifecycle-livedata-core-ktx:$livedataVersion"
        api "androidx.lifecycle:lifecycle-livedata-ktx:$livedataVersion"
        api "androidx.lifecycle:lifecycle-reactivestreams-ktx:$livedataVersion"
        api "androidx.lifecycle:lifecycle-runtime-ktx:$livedataVersion"

        // 常用工具
        api rootProject.ext.dependencies.multidex // 分包
        api rootProject.ext.dependencies.logger // 日志
        api rootProject.ext.dependencies.rxpermissions // 权限
        api rootProject.ext.dependencies.arouter_api // 阿里路由
        api rootProject.ext.dependencies.immersionbar // 沉浸式bar
        // fragment快速实现（可选）
        api 'com.gyf.immersionbar:immersionbar-components:3.0.0'
        // kotlin扩展（可选）
        api 'com.gyf.immersionbar:immersionbar-ktx:3.0.0'
        //基础工具库(RxTool)
        api 'com.github.tamsiree.RxTool:RxKit:2.6.3'
        // jackson序列化工具，做kotlin的deepCopy使用
        api 'com.fasterxml.jackson.core:jackson-core:2.9.0'
        api 'com.fasterxml.jackson.core:jackson-databind:2.9.0'

        api rootProject.ext.dependencies.gson // gson
        api rootProject.ext.dependencies.rxjava // rxJava
        api rootProject.ext.dependencies.rxandroid // rxAndroid
        api rootProject.ext.dependencies.okio // okio
        api rootProject.ext.dependencies.okhttp // okHttp
        api rootProject.ext.dependencies.retrofit // retrofit
        api rootProject.ext.dependencies.converter_gson // retrofit转json
        api rootProject.ext.dependencies.glide // glide图片加载，还需要配置annotationProcessor到使用的类中
        kapt rootProject.ext.dependencies.glide_compiler // glide annotationProcessor

        // 系统控件
        api rootProject.ext.dependencies.constraintlayout
        api rootProject.ext.dependencies.recyclerview
        api rootProject.ext.dependencies.cardview
        api "androidx.viewpager2:viewpager2:1.0.0"
        api 'com.google.android.material:material:1.2.1'
        api 'com.google.android:flexbox:2.0.1' // 弹性控件（功能强大）

        // 第三方控件
        api "org.jetbrains.kotlin:kotlin-reflect:1.5.10"
        api rootProject.ext.dependencies.BaseRecyclerViewAdapterHelper // adapter
        api 'io.github.youth5201314:banner:2.2.2' // 轮播图
        api 'com.github.hackware1993:MagicIndicator:1.7.0' // 指示器

        /*// annotationProcessor的测试注解
        api project(":apt-annotation")
        //annotationProcessor在公共类中引用无效，只有初始化方法会执行，所以应该放在需要使用processor的module中
        kapt project(":apt-processor")*/
    }
}

